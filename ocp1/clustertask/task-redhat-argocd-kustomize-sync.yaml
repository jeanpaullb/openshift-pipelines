apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: redhat-argocd-kustomize-sync
  labels:
    # Version de la ClusterTask
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/categories: Deployment
    tekton.dev/tags: argocd, sync, kustomize
    tekton.dev/displayName: "ArgoCD Kustomize Sync"
spec:
  params:
    - description: name of the application to sync
      name: application-name
      type: string
    - description: name of the environment
      name: environment
      type: string
    - description: uri of the new image
      name: image
      type: string
    - default: '--insecure'
      name: flags
      type: string
  stepTemplate:
    envFrom:
      - configMapRef:
          name: argocd-env-configmap
      - secretRef:
          name: argocd-env-secret
    name: config
    resources: {}
  steps:
    - image: 'quay.io/argoproj/argocd:v2.2.8'
      name: kustomize-sync
      resources: {}
      script: >
        if [ -z $ARGOCD_AUTH_TOKEN ]; then
          yes | argocd login  $ARGOCD_SERVER --insecure --username=$ARGOCD_USERNAME --password=$ARGOCD_PASSWORD; 
        fi

        echo 'login'

        argocd app actions run $(params.application-name)-$(params.environment) restart --kind Deployment --resource-name $(params.application-name)

        argocd app wait $(params.application-name)-$(params.environment) --health $(params.flags)

        echo 'argocd app wait $(params.application-name)-$(params.environment) --health $(params.flags)'

        argocd app sync $(params.application-name)-$(params.environment) $(params.flags)

        echo 'argocd app sync $(params.application-name)-$(params.environment) $(params.flags)'
    - image: 'quay.io/argoproj/argocd:v2.2.8'
      name: job-wait
      resources: {}
      script: >
        argocd app wait $(params.application-name)-$(params.environment) --resource :Job:job-jmeter --health